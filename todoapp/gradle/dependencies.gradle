/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def versions = [
    dagger: "2.12",
    support: '26.1.0',
    autodispose: '0.2.0',
    robolectric: "3.4.2",
    intellij: "2017.2",
    rave: "2.0.0",
    errorProne: '2.0.19',
    butterknife: '8.8.1',
    room: '1.0.0',
    ribs: '0.9.1',
]

def apt = [
    androidApi: "com.google.android:android:2.2.1",
    autoCommon: "com.google.auto:auto-common:0.8",
    autoService: "com.google.auto.service:auto-service:1.0-rc3",
    nullAway: 'com.uber.nullaway:nullaway:0.1.4',
    daggerCompiler: "com.google.dagger:dagger-compiler:${versions.dagger}",
    javapoet: "com.squareup:javapoet:1.9.0",
    javax: "javax.annotation:jsr250-api:1.0",
    javaxInject: "javax.inject:javax.inject:1",
    autoValue: "com.google.auto.value:auto-value:1.5",
    autoValueAnnotations: "com.jakewharton.auto.value:auto-value-annotations:1.5",
    raveCompiler: "com.uber:rave-compiler:${versions.rave}",
    errorProneAnnotations: "com.google.errorprone:error_prone_annotations:${versions.errorProne}",
    butterknife: "com.jakewharton:butterknife-compiler:${versions.butterknife}",
    room: "android.arch.persistence.room:compiler:${versions.room}",
]

def build = [
    buildToolsVersion: '25.0.2',
    compileSdkVersion: 25,
    gradlePluginsUrl : "https://plugins.gradle.org/m2/",
    ci: 'true' == System.getenv('CI'),
    minSdkVersion: 16,
    targetSdkVersion: 25,
    guava: "com.google.guava:guava:20.0",
    commonsLang: "commons-lang:commons-lang:2.6",
    intellijPlugin: "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.2.13",
    errorProne: "com.google.errorprone:error_prone_core:${versions.errorProne}",
    errorProneCore: "com.google.errorprone:error_prone_core:${versions.errorProne}",
    errorProneTestHelpers: "com.google.errorprone:error_prone_test_helpers:${versions.errorProne}",
    gradlePlugins: [
        android: 'com.android.tools.build:gradle:2.3.1',
        errorprone: 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.11'
    ]
]

def support = [
    appcompat: "com.android.support:appcompat-v7:${versions.support}",
    annotations: "com.android.support:support-annotations:${versions.support}",
    design: "com.android.support:design:${versions.support}",
    recyclerview: "com.android.support:recyclerview-v7:${versions.support}",
]

def test = [
    junit: "junit:junit:4.12",
    mockito: "org.mockito:mockito-core:2.0.42-beta",
    assertj: "org.assertj:assertj-core:2.6.0",
    compileTesting: "com.google.testing.compile:compile-testing:0.11",
    room: "android.arch.persistence.room:testing:${versions.room}",
]

def external = [
    materialDrawer: "com.mikepenz:materialdrawer:6.0.2@aar",
    timber: 'com.jakewharton.timber:timber:4.5.1',
    dagger: "com.google.dagger:dagger:${versions.dagger}",
    rxjava2: "io.reactivex.rxjava2:rxjava:2.1.4",
    rxrelay2: "com.jakewharton.rxrelay2:rxrelay:2.0.0",
    rxandroid2: "io.reactivex.rxjava2:rxandroid:2.0.1",
    reactiveStreams: "org.reactivestreams:reactive-streams:1.0.0",
    roboelectricBase: "org.robolectric:robolectric:${versions.robolectric}",
    rxbinding: 'com.jakewharton.rxbinding2:rxbinding:2.0.0',
    leakcanaryDebug: 'com.squareup.leakcanary:leakcanary-android:1.5.4',
    butterknife: "com.jakewharton:butterknife:${versions.butterknife}",
    stetho: "com.facebook.stetho:stetho:1.5.0",
]

def uber = [
    autodispose: "com.uber.autodispose:autodispose:${versions.autodispose}",
    autodisposeAndroid : "com.uber.autodispose:autodispose-android:${versions.autodispose}@aar",
    rave: "com.uber:rave:${versions.rave}",
    ribUava: "com.uber.rib:rib-uava:${versions.ribs}",
    ribAndroid: "com.uber.rib:rib-android:${versions.ribs}",
    ribScreenStackBase: "com.uber.rib:rib-screen-stack-base:${versions.ribs}",
]

def arch = [
    room: "android.arch.persistence.room:runtime:${versions.room}",
    roomRxJava2: "android.arch.persistence.room:rxjava2:${versions.room}",
]

ext.deps = [
    "apt": apt,
    "build": build,
    "external": external,
    "support": support,
    "test": test,
    "versions": versions,
    "uber": uber,
    "arch": arch,
]
